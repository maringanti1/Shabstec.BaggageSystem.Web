@page "/configuration"
@layout MainLayout
@using System.Text;
@using System.Net.Http;
@using System.Text.Json;
@using BlazorApp.Web.Models;
@using Microsoft.AspNetCore.Authorization;
@inject IAlertService AlertService
@attribute [Authorize]
@inject IAccountService AccountService 
<div style="color:white">
<h1>Configurations</h1>
<NavLink href="configuration/add" class="btn btn-sm btn-success mb-2">Add Configuration</NavLink>
    <table class="table table-striped" style="color:white; background-color: slateblue">
        <thead style="background-color:#a65656;">
        <tr>
            <th style="width: 20%">AirLine Codes</th>
            <th style="width: 20%">Publisher Queue Name</th>
            <th style="width: 20%">RabbitMQ User Name</th>
            <th style="width: 20%">Subscribers</th>
            <th style="width: 20%">Action</th>
        </tr>
    </thead>
    <tbody>
        @if (configurations != null)
        {
            foreach (var configuration in configurations)
            {
                <tr>
                    <td>@configuration.AirLineCodes</td>
                    <td>@configuration.BrokerSvcBusQueueName</td>
                    <td>@configuration.RabbitMQUsername</td>
                    <td>@configuration.SubscribedQueueTopic</td> 
                    <td style="white-space: nowrap">
                        <button class="btn btn-sm btn-primary mr-1"
                        @onclick="() => LaunchDeployment(configuration)">
                            Launch Deployment
                        </button>
                    </td> 
                </tr>
            }
        }
    </tbody>
</table>
<br />
@if (loading)
{
                <div class="sample" style="white-space: nowrap; overflow: hidden;">
                <span class="spinner-border spinner-border-lg mr-1"></span>
                <span style="color: red;">Please wait, the below docker images are getting deployed for this Client.</span>
                    <br/>
                <span style="color: green;">Rabbit MQ message broker </span>
                    <br />
                <span style="color: blue;">Broker Service </span>
                <br />
                <span style="color: orange;">Client Service </span>
                </div>
}
</div>

 
@code {
    private bool loading;
    private IList<Configuration> configurations;

    protected override async Task OnInitializedAsync()
    {
        AlertService.Clear();
        loading = true;
        configurations = await AccountService.GetAllConfigurations();
        loading = false;
    }

    private async Task LaunchDeployment(Configuration configuration)
    {
        AlertService.Clear();
        loading = true;
        await AccountService.LaunchDeployment(configuration);
        AlertService.Success("Deployment completed successfully!", keepAfterRouteChange: true);
        loading = false;
    }
}
